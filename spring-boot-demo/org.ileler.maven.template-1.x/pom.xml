<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.ileler</groupId>
        <artifactId>org.ileler.maven.dependencies</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>org.ileler.maven.template</artifactId>
    <name>org.ileler.maven.template</name>
    <packaging>pom</packaging>

    <properties>
        <custom.package.skipCopyLib>true</custom.package.skipCopyLib>
        <custom.package.mainClass>${start-class}</custom.package.mainClass>
        <custom.package.insideGroupIds>com.mpr</custom.package.insideGroupIds>
        <custom.package.libPath>${project.build.directory}/lib</custom.package.libPath>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <java.version>1.8</java.version>
        <skipTests>true</skipTests>
        <bootstrap.profiles>
            <![CDATA[
---
eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.zone:http://${eureka.address:127.0.0.1:10002}/eureka/}
spring:
  application:
    name: '@project.artifactId@'
  cloud:
    config:
      discovery:
        enabled: true
        serviceId: org.ileler.config
---
#开发环境配置
spring.profiles: dev,default
eureka.zone: http://127.0.0.1:10002/eureka/
---
#测试环境配置
spring.profiles: test
eureka.zone: http://127.0.0.1:10002/eureka/,http://127.0.0.1:10002/eureka/
---
#高仿环境配置
spring.profiles: pre
eureka.zone: http://127.0.0.1:10002/eureka/,http://127.0.0.1:10002/eureka/
---
#上线环境配置
spring.profiles: online
eureka.zone: http://127.0.0.1:10002/eureka/,http://127.0.0.1:10002/eureka/
---
            ]]>
        </bootstrap.profiles>
    </properties>

    <distributionManagement>
        <repository>
            <id>releases-local</id>
            <name>Release Repository</name>
            <url>http://localhost:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots-local</id>
            <name>Snapshots Repository</name>
            <url>http://localhost:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <pluginRepositories>
        <pluginRepository>
            <id>local.repository</id>
            <name>SpringSource Enterprise Bundle Repository - Releases</name>
            <url>http://localhost:8081/repository/maven-public/</url>
        </pluginRepository>
        <pluginRepository>
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - Releases</name>
            <url>http://repository.springsource.com/maven/bundles/release</url>
        </pluginRepository>
        <pluginRepository>
            <id>eclipse.virgo.build.bundles.release</id>
            <name>Eclipse Virgo Build</name>
            <url>http://build.eclipse.org/rt/virgo/maven/bundles/release</url>
        </pluginRepository>
        <pluginRepository>
            <id>com.springsource.repository.bundles.external</id>
            <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
            <url>http://repository.springsource.com/maven/bundles/external</url>
        </pluginRepository>
    </pluginRepositories>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <additionalProperties>
                            <svn>${buildNumber}.</svn>
                            <time>${timestamp}.</time>
                        </additionalProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.4</version>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>true</doUpdate>
                        <shortRevisionLength>5</shortRevisionLength>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>custom-package</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>src/main/resources/bootstrap.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <!--<plugin>-->
                        <!--<groupId>org.codehaus.mojo</groupId>-->
                        <!--<artifactId>buildnumber-maven-plugin</artifactId>-->
                    <!--</plugin>-->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-lib</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${custom.package.libPath}
                                    </outputDirectory>
                                    <excludeGroupIds>${custom.package.insideGroupIds}</excludeGroupIds>
                                    <skip>${custom.package.skipCopyLib}</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-com.mpr.lib</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/classes/inside.lib
                                    </outputDirectory>
                                    <excludeGroupIds>*</excludeGroupIds>
                                    <includeGroupIds>${custom.package.insideGroupIds}</includeGroupIds>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-jar</id>
                                <phase/>
                            </execution>
                            <execution>
                                <id>custom-package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <archive>
                                        <manifest>
                                            <addClasspath>true</addClasspath>
                                            <classpathPrefix>lib/</classpathPrefix>
                                            <useUniqueVersions>false</useUniqueVersions>
                                            <mainClass>${custom.package.mainClass}</mainClass>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase/>
                            </execution>
                            <execution>
                                <id>custom-repackage</id>
                                <goals>
                                    <goal>build-info</goal>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
                <reportSets>
                    <reportSet><!-- by default, id = "default" -->
                        <reports><!-- select non-aggregate reports -->
                            <report>javadoc</report>
                            <report>test-javadoc</report>
                        </reports>
                    </reportSet>
                    <reportSet>
                        <id>aggregate</id><!-- aggregate reportSet, for pom with modules -->
                        <inherited>false</inherited><!-- don't run aggregate in child modules -->
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.10</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <targetJdk>1.7</targetJdk>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Max</effort>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>