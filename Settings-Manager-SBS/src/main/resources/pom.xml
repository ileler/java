<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mpr</groupId>
	<artifactId>com.mpr.maven.template</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>AgileDev Maven Template</name>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<java.version>1.8</java.version>
		<skipTests>true</skipTests>

		<service.dir>.</service.dir>
		<service.bnum>1</service.bnum>
		<service.tail>-untail</service.tail>
		<service.stype>restart</service.stype>
		<service.debug>undebug</service.debug>
		<service.profile>dev</service.profile>
        <service.fromFile>${project.build.directory}/${project.build.finalName}.${project.packaging}</service.fromFile>
        <service.toFile>${project.build.finalName}.${project.packaging}</service.toFile>
		<service.spring.arg></service.spring.arg>
		<service.command><![CDATA[./sbs ${service.stype} -num ${service.bnum} ${service.tail} ${service.arg} -debug ${service.debug}${service.dport} --server.port=${service.port} --spring.profiles.active=${service.profile} ${service.spring.arg}]]></service.command>
		<sbs>
<![CDATA[
#EOF
#!/bin/bash
# Author: ileler@qq.com

_getJarName() {
	JAR_NAME=

	while [ \$# -gt 0 ]
		do
		case \$1 in
		-jar)
				JAR_NAME=\`cd \\\`dirname .\\\`; pwd\`/\$2
				shift;
				;;
		-d)
				CURRENT_DIR=\`cd \$2; pwd\`
				shift;
				;;
		esac
		shift
	done

	if [ -z "\$JAR_NAME" ]
	then
		JAR_NAME=\$(ls -t \$CURRENT_DIR/*.jar | head -n 1)
	fi
	echo \$JAR_NAME
}

_stop() {
	JAR_NAME=\`_getJarName "\$@"\`
	PID=\`jps -ml | grep \$JAR_NAME | grep -o ^[0-9]*\`
	if [ -n "\$PID" ]; then kill -9 \$PID; fi;
	printf "\nkill [\$PID](\$JAR_NAME)\n"
}

_start() {
	JAR_NAME=\`_getJarName "\$@"\`
	VM_OPTS=
	CLEAN_FLAG=
	NO_START_FLAG=
	DEBUG_FLAG=
	DEBUG_PORT=8000
	UNTAIL_FLAG=
	SUSPEND=n
	ADDITIONAL_ARGS=

	while [ \$# -gt 0 ]
		do
		case \$1 in
		-debug)
				DEBUG_FLAG=1
				DEBUG_PORT=\$2
				shift;
				;;
		-clean)
				CLEAN_FLAG=1
				;;
		-untail)
				UNTAIL_FLAG=1
				;;
		-show)
				NO_START_FLAG=1
				;;
		-vmoptions)
				VM_OPTS=\$2
				shift;
				;;
		-suspend)
				SUSPEND=y
				;;
		-jar)
				shift;
				;;
		-d)
				CURRENT_DIR=\`cd \$2; pwd\`
				shift;
				;;
		*)
				ADDITIONAL_ARGS="\$ADDITIONAL_ARGS \$1"
				;;
		esac
		shift
	done

    if [ "\$DEBUG_PORT" -gt 0 ] 2>/dev/null ; then DEBUG_FLAG=\$DEBUG_FLAG; else DEBUG_FLAG=; fi;
	if [ "\$DEBUG_FLAG" ]
	then
		DEBUG_OPTS=" \
			-Xdebug \
			-Xrunjdwp:transport=dt_socket,address=\$DEBUG_PORT,server=y,suspend=\$SUSPEND"
	fi

	if [ "\$CLEAN_FLAG" ]
	then
        rm -rf \$CURRENT_DIR/nohup*
		rm -rf \$CURRENT_DIR/vmlog
		rm -rf \$CURRENT_DIR/logs
		rm -rf \$CURRENT_DIR/tmp
	fi

	TMP_DIR=\$CURRENT_DIR/tmp
	EXEC="\$JAVA_HOME/bin/java \
			\$JAVA_OPTS \
			\$DEBUG_OPTS \
			\$JMX_OPTS \
			-XX:+HeapDumpOnOutOfMemoryError \
			-XX:ErrorFile=\$CURRENT_DIR/vmlog/error.log \
			-XX:HeapDumpPath=\$CURRENT_DIR/vmlog/heap_dump.hprof \
			\$VM_OPTS \
			-Djava.io.tmpdir=\$TMP_DIR \
			-classpath \$CLASSPATH \
			-jar \$JAR_NAME \
			\$ADDITIONAL_ARGS"
	printf "\nexec command\n \n\t[\$EXEC] \n\nin \n\n\t[\$CURRENT_DIR] \n\ndir.\n"
	if [ -z "\$NO_START_FLAG" ]
	then
		mkdir -p \$TMP_DIR
		cd \$CURRENT_DIR
		:>./nohup.out
		nohup \$EXEC >> ./nohup.out 2>&1 &
		read -p "[\$!]" -t 3
		printf "\nexec success.\n"
		echo \$! > pid
		if [ -z "\$UNTAIL_FLAG" ]
		then
			printf "\ntail output...\n"
		    tail -f ./nohup.out
		fi
	fi
}

_backup() {

	while [ \$# -gt 0 ]
		do
		case \$1 in
		-d)
				CURRENT_DIR=\`cd \$2; pwd\`
				shift;
				;;
		esac
		shift
	done

	cd \$CURRENT_DIR

	mkdir -p backup && cd ./backup && (find ./ -mtime +30 -exec rm -rf {} \;) && cd ../;

	BACKUPDIR=./backup/\`date '+%s'\`
	mkdir \$BACKUPDIR && cp -R nohup* vmlog logs tmp *.jar \$BACKUPDIR

}

_bpstart() {

	NUM=1

	while [ \$# -gt 0 ]
		do
		case \$1 in
		-num)
				NUM=\$2
				shift;
				;;
		-d)
				CURRENT_DIR=\`cd \$2; pwd\`
				shift;
				;;
		esac
		shift
	done

    cd \$CURRENT_DIR/backup
	target=\`ls -t | head -\$NUM | tail -1\`
	cd \$target && cp -Rf * ../../ && cd ../../

}

#CURRENT_DIR=\`cd \\\`dirname "\$0"\\\`/; pwd\`
CURRENT_DIR=\`cd \\\`dirname .\\\`; pwd\`

COMMAND=\$1
if [ -n "\$COMMAND" ]; then shift; fi;

if [ "\$COMMAND" = "start" ]
then
	_start "\$@"
elif [ "\$COMMAND" = "stop" ]
then
	_stop "\$@"
elif [ "\$COMMAND" = "restart" ]
then
	_stop "\$@"
	read -p "..." -t 3
	_start "\$@"
elif [ "\$COMMAND" = "backup" ]
then
	_backup "\$@"
elif [ "\$COMMAND" = "bpstart" ]
then
	_stop "\$@"
	read -p "..." -t 3
	_bpstart "\$@"
	_start "\$@"
else
	if [ -n "\$COMMAND" ]
	then
		echo "Unknown command: \${COMMAND}\n"
	fi
	printf "
Usage: sbs [COMMAND] [ARGS]...
  COMMAND:
    stop\t\t  stop jar
    start\t\t  start jar
    restart\t\t  restart jar
  ARGS:
    -d\t\t\t  set work dir
    -jar\t\t  set jar file path
    -debug [port]\t  set debug model with port, port default 8000
    -vmoptions [vmopts]\t  set jvm options
    -show\t\t  show target command without exec
    -clean\t\t  clean logs,nohup.out,vmlog file or dir
    *\t\t\t  other parameters will be appended to the end of the command
  eg:
    sh ./sbs restart -clean -vmoptions \"-Xms300m -Xmx300m\" -debug 8003 --server.port=11003
	\n"
fi
EOF
]]>
		</sbs>
	</properties>
	<scm>
		<connection>scm:svn:http://net.mprtimes.home:8443/svn/MPRSP-UTILS/com.isoftstone.agiledev.maven.template/trunk</connection>
		<developerConnection>scm:svn:http://net.mprtimes.home:8443/svn/MPRSP-UTILS/com.isoftstone.agiledev.maven.template/trunk</developerConnection>
	</scm>
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>MPRSP Release Repository</name>
			<url>http://172.16.6.17:8081/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>MPRSP Snapshots</name>
			<url>http://172.16.6.17:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix</artifactId>
				<version>1.3.1.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.7.0</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.7.0</version>
			</dependency>
			<dependency>
				<groupId>com.mpr</groupId>
				<artifactId>com.mpr.util</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.0</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>local.repository</id>
			<name>SpringSource Enterprise Bundle Repository - Releases</name>
			<url>http://172.16.6.17:8081/repository/maven-public/</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>eclipse.virgo.build.bundles.release</id>
			<name>Eclipse Virgo Build</name>
			<url>http://build.eclipse.org/rt/virgo/maven/bundles/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</pluginRepository>

	</pluginRepositories>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>build-info</goal>
							</goals>
							<configuration>
								<additionalProperties>
									<svn>${buildNumber}.</svn>
									<time>${timestamp}.</time>
								</additionalProperties>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.4</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doCheck>false</doCheck>
						<doUpdate>true</doUpdate>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>

		<extensions>
			<extension>
				<groupId>com.mpr.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.0.1-SNAPSHOT</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>com.mpr.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.1-SNAPSHOT</version>
				<configuration>
					<serverId>${service.sid}</serverId>
					<fromFile>${service.fromFile}</fromFile>
					<toFile>${service.dir}/${service.toFile}</toFile>
					<commands>
						<command><![CDATA[cd ${service.dir} && cat > sbs << EOF && export CURRENT_DIR=`cd \`dirname .\`; pwd` && bash --login -c 'cd $CURRENT_DIR && echo $PATH && chmod u+x ./sbs && ${service.command}';${sbs}]]></command>
					</commands>
					<displayCommandOutputs>true</displayCommandOutputs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>

	</build>
	<reporting>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-project-info-reports-plugin</artifactId> 
				<version>2.6</version> <reportSets> <reportSet> <reports> <report>index</report> 
				<report>dependencies</report> <report>project-team</report> </reports> </reportSet> 
				</reportSets> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<reportSets>
					<reportSet><!-- by default, id = "default" -->
						<reports><!-- select non-aggregate reports -->
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id><!-- aggregate reportSet, for pom with modules -->
						<inherited>false</inherited><!-- don't run aggregate in child modules -->
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<targetJdk>1.7</targetJdk>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<effort>Max</effort>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>